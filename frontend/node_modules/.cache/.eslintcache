[{"E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\index.js":"1","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\App.js":"2","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\reportWebVitals.js":"3","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\Login.jsx":"4","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\Signup.jsx":"5","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\Feed.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":569,"mtime":1613792000000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3020,"mtime":1613808462000,"results":"11","hashOfConfig":"8"},{"size":5214,"mtime":1613627182000,"results":"12","hashOfConfig":"8"},{"size":14666,"mtime":1614148466000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"awnkot",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\index.js",[],["30","31"],"E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\App.js",[],"E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\reportWebVitals.js",[],"E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\Login.jsx",["32","33"],"import {React,useState} from 'react';\r\nimport './App.css';\r\nimport { NavLink } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nfunction Login_form() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [res, setRes] = useState({});\r\n\r\n    function loginForm(e){\r\n        e.preventDefault();\r\n        axios.post('http://127.0.0.1:8000/login/', {\r\n            email:email,\r\n            password:password,\r\n          })\r\n          .then((response) => {\r\n            setRes(response.data)\r\n            console.log(response.data.user_info)\r\n            if(response.data.login=='Done'){\r\n                localStorage.setItem('token',response.data.token)\r\n                localStorage.setItem('user_info',response.data.user_info.id)\r\n                localStorage.setItem('user_name',response.data.user_info.username)\r\n                window.location.href=\"/Feed_Feed\"\r\n            }\r\n          });\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"container login-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    <h1 className=\"text-center login-title\">\r\n                        <img src=\"https://assets.website-files.com/5c75b94c8dd1ae50d3b9294b/5d48831280adb734a5db5620_hukglfkfklk%3B.png\" width=\"300\" alt=\"\"/>\r\n                    </h1>\r\n                    <div className=\"account-wall\">\r\n                        <img className=\"profile-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Instagram_logo_2016.svg/1200px-Instagram_logo_2016.svg.png\" alt=\"\"/>\r\n                        <form className=\"form-signin\" onSubmit={loginForm}>\r\n                        <input type=\"text\" onChange={(e) => setEmail(e.target.value)} className=\"form-control\" placeholder=\"Email\" required />\r\n                        <input type=\"password\" onChange={(e) => setPassword(e.target.value)} className=\"form-control\" placeholder=\"Password\" required/>\r\n                        {<p style={{color:'red'}}>{res.non_field_errors}</p>}\r\n                        \r\n                        <button className=\"mybtn\" type=\"submit\">\r\n                            Login</button>\r\n                        <label className=\"checkbox pull-left\">\r\n                            <input type=\"checkbox\" className=\"text-dark\" value=\"remember-me\"/>\r\n                            Remember me\r\n                        </label>\r\n                        <br/>\r\n                        <a href=\"#\" className=\"pull-right need-help\">Frogot Password </a><span className=\"clearfix\"></span>\r\n                        </form>\r\n                    </div>\r\n                    <NavLink to=\"/signup\" className=\"text-center new-account\">Create an account </NavLink>\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Login_form;","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\Signup.jsx",["34","35","36","37","38"],"import {React,useRef,useState} from 'react';\r\nimport './App1.css';\r\nimport { NavLink ,browserHistory } from 'react-router-dom'\r\n\r\n\r\nfunction Signup_form() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n\r\n    const [res, setRes] = useState({});\r\n\r\n    \r\n    function SignupForm(e){\r\n        e.preventDefault();\r\n        \r\n        const main_body={\r\n            username:username,\r\n            email:email,\r\n            password:password,\r\n            password2:password2\r\n        }\r\n        const send_data = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(main_body)\r\n        };\r\n        fetch('http://127.0.0.1:8000/signup/', send_data)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setRes(data)\r\n            setTimeout(function(){ \r\n                if(data.Sign_Up=='registration done successfully'){\r\n                    console.log('yo');\r\n                    window.location.href=\"/\"\r\n                }\r\n             }, 3000);\r\n        });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"signup-form\">\r\n            <form onSubmit={SignupForm}>\r\n                <h2>\r\n                <img src=\"https://assets.website-files.com/5c75b94c8dd1ae50d3b9294b/5d48831280adb734a5db5620_hukglfkfklk%3B.png\" width=\"300\" alt=\"\"/>\r\n                </h2>\r\n                <p>Please fill in this form to create an account!</p>\r\n                <hr/>\r\n                <div className=\"form-group\">\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <span className=\"fa fa-user\"></span>\r\n                            </span>                    \r\n                        </div>\r\n                        <input type=\"text\" onChange={(e) => setUsername(e.target.value)} className=\"form-control\" name=\"username\" placeholder=\"Username\" required=\"required\"/>\r\n                    </div>\r\n                    {<p style={{color:'red'}}>{res.username}</p>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <i className=\"fa fa-paper-plane\"></i>\r\n                            </span>                    \r\n                        </div>\r\n                        <input type=\"email\" onChange={(e) => setEmail(e.target.value)} className=\"form-control\" name=\"email\" placeholder=\"Email Address\" required=\"required\"/>\r\n                    </div>\r\n                    {<p style={{color:'red'}}>{res.email}</p>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <i className=\"fa fa-lock\"></i>\r\n                            </span>                    \r\n                        </div>\r\n                        <input type=\"password\" onChange={(e) => setPassword(e.target.value)} className=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\"/>\r\n                    </div>\r\n                    {<p style={{color:'red'}}>{res.password}</p>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <i className=\"fa fa-lock\"></i>\r\n                                <i className=\"fa fa-check\"></i>\r\n                            </span>                    \r\n                        </div>\r\n                        <input type=\"password\" onChange={(e) => setPassword2(e.target.value)} className=\"form-control\" name=\"password2\" placeholder=\"Confirm Password\" required=\"required\"/>\r\n                    </div>\r\n                    {<p style={{color:'red'}}>{res.password2}</p>}\r\n                    {<p style={{color:'red'}}>{res.non_field_errors}</p>}\r\n                    {<p style={{color:'green'}}>{res.Sign_Up}</p>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-check-label\"><input type=\"checkbox\" required=\"required\"/> I accept the <a href=\"#\">Terms of Use</a> &amp; <a href=\"#\">Privacy Policy</a></label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button type=\"submit\"  className=\"btn btn-primary btn-lg\">Sign Up</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"text-center\">Already have an account? \r\n            <NavLink to=\"/\" className=\"text-primary\">Login here</NavLink></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default Signup_form;","E:\\Documents\\Projects\\test\\restAPI\\API2\\frontend\\src\\Feed.jsx",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55"],"import {React,useState,useEffect} from 'react';\r\nimport { Button,Modal } from 'react-bootstrap';\r\nimport './App3.css';\r\n\r\nconst url_=\"http://127.0.0.1:8000\";\r\nconst token=localStorage.getItem('token')\r\nconst u_id=localStorage.getItem('user_info')\r\nconst user_id=localStorage.getItem('user_info')\r\n\r\nfunction I_nav(){\r\n    function logout(){\r\n        const token=localStorage.getItem('token')\r\n        fetch(\"http://127.0.0.1:8000/logout/\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            }\r\n          }\r\n        )\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                if(result.logout=='Done'){\r\n                    localStorage.setItem('token',null)\r\n                    window.location.href=\"/\"\r\n                }\r\n            }\r\n          )\r\n    }\r\n    const [avatar,SetAvatar]=useState()\r\n    function load_(){\r\n        fetch(url_+\"/user/\"+u_id+\"/\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            }\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data) => {\r\n            console.log(data.avatar)\r\n            SetAvatar(data.avatar) \r\n        })\r\n    }\r\n    useEffect(() => {\r\n        load_()\r\n    })\r\n\r\n    function upload(e){\r\n        \r\n        const formData = new FormData();\r\n        formData.append('avatar', e.target.files[0]);\r\n        const main_data={\r\n            method:\"PATCH\",\r\n            headers :{\r\n                Authorization:\"Token \"+token,\r\n            },\r\n            body:formData\r\n        }\r\n        fetch(url_+\"/user/\"+u_id+\"/\",main_data)\r\n        .then(response => response.json())\r\n        .then(status => {\r\n            console.log(status)\r\n            window.location.reload(false)\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"container mb-5\">\r\n            <nav className=\"navbar navbar-expand-lg p-1 navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                <i class=\"fa fa-instagram\" aria-hidden=\"true\" style={{fontSize:'55px'}}></i>\r\n                </a>\r\n                \r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\" alt=\"\" width=\"150\" />\r\n                </a>\r\n                \r\n                \r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item mx-2\">\r\n                        <div className=\"nav-link\">\r\n                        Welcome {localStorage.getItem('user_name')}\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item mx-2\">\r\n                        <a className=\"nav-link\" style={{cursor:'pointer'}}>\r\n                        <div className=\"circle\">\r\n                            <img src={avatar} className=\"circle_img\"/>\r\n                            <input type=\"file\" onChange={(e) => upload(e)} class=\"custom-file-input\"/>\r\n                        </div>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item mx-2\">\r\n                        <a className=\"nav-link\" href=\"#\">\r\n                            <i className=\"fa fa-heart-o\" style={{fontSize:'35px'}}></i>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item mx-2\">\r\n                        <a className=\"nav-link\" onClick={logout}>\r\n                            <i className=\"fa fa-sign-out\" style={{fontSize:'35px'}}></i>\r\n                        </a>\r\n                    </li>\r\n\r\n                    </ul>\r\n                \r\n            </nav>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction I_feed2(){\r\n    const [File, setFile] = useState({'name':'No File Selected'});\r\n    const [Message, setMessage] = useState(\" \");\r\n\r\n    function post_it(e){\r\n        const token = localStorage.getItem('token')\r\n        if(token!=null){\r\n            const user_id = localStorage.getItem('user_info')\r\n            const formData = new FormData();\r\n            formData.append('postby',parseInt(user_id));\r\n            formData.append('File', File);\r\n            formData.append('pdata', Message);\r\n            console.log(formData)\r\n            const main_data={\r\n                method:\"POST\",\r\n                headers :{\r\n                    Authorization:\"Token \"+token,\r\n                },\r\n                body:formData\r\n            }\r\n            fetch(\"http://127.0.0.1:8000/post/\",main_data)\r\n            .then(response => response.json())\r\n            .then(status => {\r\n                console.log(status)\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"col-4\">\r\n        <div class=\"formBox\">\r\n\t\t\t\t<form onSubmit={post_it}>\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<h1>Post Here</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div class=\"inputBox \">\r\n                                    <textarea className=\"textarea\" onChange={(e) => setMessage(e.target.value)} cols=\"30\" rows=\"35\" required></textarea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n                            <div className=\"col-sm-12\">\r\n                            <div class=\"file is-danger has-name is-boxed\">\r\n                            <label class=\"file-label\">\r\n                                <input class=\"file-input\" type=\"file\" onChange={(e) => setFile(e.target.files[0])} name=\"resume\" required/>\r\n                                <span class=\"file-cta\">\r\n                                <span class=\"file-icon\">\r\n                                    <i class=\"fa fa-upload\"></i>\r\n                                </span>\r\n                                <span class=\"file-label\">\r\n                                    Choose Your Upload ...\r\n                                </span>\r\n                                </span>\r\n                                <span class=\"file-name\">\r\n                                    {File.name}\r\n                                </span>\r\n                            </label>\r\n                            </div>\r\n                            </div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"\" class=\"button\" value=\"Share Post\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Feed_Feed(){\r\n    const [data, setdata] = useState({});\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const token=localStorage.getItem('token')\r\n    const user_id=localStorage.getItem('user_info')\r\n    const u_id=localStorage.getItem('user_info')\r\n    const [cmt, setcmt] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://127.0.0.1:8000/post/\"+user_id+\"/\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            }\r\n          }\r\n        )\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setdata(result);\r\n              setLoad(true);\r\n            }\r\n          )\r\n      }, []\r\n    )\r\n    function All(){\r\n        fetch(\"http://127.0.0.1:8000/post/\"+user_id+\"/\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            }\r\n          }\r\n        )\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              setdata(result);\r\n              setLoad(true);\r\n            }\r\n          )\r\n    }\r\n    function likeit(post_id){\r\n        fetch(\"http://127.0.0.1:8000/like/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            },\r\n            body:JSON.stringify({\r\n                u_id:u_id,\r\n                p_id:post_id,\r\n                like:true,\r\n            })\r\n          }\r\n        )\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                console.log(result)\r\n                All()\r\n            }\r\n          )\r\n    }\r\n    function del_like(post_id){\r\n        fetch(\"http://127.0.0.1:8000/like/\"+u_id+\"/\"+post_id, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            }\r\n          }\r\n        )\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                console.log(result)\r\n                All()\r\n            }\r\n          )\r\n    }\r\n    function post_comment(post_id){\r\n        fetch(\"http://127.0.0.1:8000/com/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Authorization:\"Token \"+token,\r\n            },\r\n            body:JSON.stringify({\r\n                Comments:cmt,\r\n                c_p_id:post_id,\r\n                c_u_id:u_id\r\n            })\r\n          }\r\n        )\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                console.log(result)\r\n                All()\r\n            }\r\n          )\r\n    }\r\n\r\n    if(load==true){\r\n        return(\r\n            <>\r\n            \r\n            <I_nav/>\r\n            <div className=\"container bg-light p-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <div className=\"fbox\">\r\n                            <ul>\r\n                            {\r\n                            data.map(props => (\r\n                                <div key={props.pid}>\r\n                                <div className=\"box\">\r\n                                    <div className=\"head\">\r\n                                        <div className=\"circle\">\r\n                                            <img src={url_+props.your_user[0].avatar} className=\"circle_img\"/>\r\n                                        </div>\r\n                                        <div className=\"title\">\r\n                                            {props.your_user[0].username}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"main\">\r\n                                        {props.File.split(\".\")[props.File.split(\".\").length-1]==\"mp4\"?\r\n                                            <video className=\"video_\" src={url_+props.File} controls></video>:\r\n                                            <img className=\"img_\" src={url_+props.File} alt=\"\"/>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"social\">\r\n                                        <ul className=\"social-in\">\r\n                                            <li>\r\n                                                <a className=\"nav-link\">\r\n                                                {\r\n                                                    !props.like[0]? \r\n                                                    <i className=\"fa fa-heart-o\" onClick={() => likeit(props.pid)} style={{fontSize:'25px'}}></i>\r\n    \r\n                                                    : \r\n                                                    <i className=\"fa fa-heart\" onClick={() => del_like(props.pid)} style={{fontSize:'25px',color:'red'}}></i>\r\n                                                }\r\n                                                <i>{props.counts}</i>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <div class=\"input-group mb-3\">\r\n                                                <div class=\"input-group-prepend\">\r\n                                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                                    <i className=\"fa fa-comments-o\" style={{fontSize:'25px'}}></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input type=\"text\" class=\"form-control\" placeholder=\"Comment\" onChange={(e)=>setcmt(e.target.value)}/>\r\n                                                <button class=\"input-group-text btn btn-primary\" id=\"basic-addon1\" onClick={()=>post_comment(props.pid)}>\r\n                                                    <i className=\"fa fa-paper-plane\" style={{fontSize:'25px'}}></i>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"data\">\r\n                                    {props.your_user[0].username}:<span>\r\n                                        {props.pdata}\r\n                                        </span>\r\n                                    <hr/>\r\n                                    {!props.comment[0]?\r\n                                    <i></i>\r\n                                    :\r\n                                    <i>{\r\n                                        props.comment.map(i=>(\r\n                                            <>\r\n                                            <i>{i.c_u_id} : {i.Comments}</i><br/>\r\n                                            </>\r\n                                        ))\r\n                                        }</i>\r\n                                    }   \r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                \r\n                            ))}\r\n                            \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <I_feed2/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <>\r\n            <h4>\r\n            Unauthorized Access\r\n            </h4>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feed_Feed;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":20,"column":35,"nodeType":"62","messageId":"63","endLine":20,"endColumn":37},{"ruleId":"64","severity":1,"message":"65","line":53,"column":25,"nodeType":"66","endLine":53,"endColumn":70},{"ruleId":"67","severity":1,"message":"68","line":1,"column":15,"nodeType":"69","messageId":"70","endLine":1,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":3,"column":19,"nodeType":"69","messageId":"70","endLine":3,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":34,"column":32,"nodeType":"62","messageId":"63","endLine":34,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":99,"column":115,"nodeType":"66","endLine":99,"endColumn":127},{"ruleId":"64","severity":1,"message":"65","line":99,"column":150,"nodeType":"66","endLine":99,"endColumn":162},{"ruleId":"67","severity":1,"message":"72","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"73","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":22},{"ruleId":"67","severity":1,"message":"74","line":8,"column":7,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":24,"column":33,"nodeType":"62","messageId":"63","endLine":24,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":72,"column":17,"nodeType":"66","endLine":72,"endColumn":54},{"ruleId":"64","severity":1,"message":"65","line":76,"column":17,"nodeType":"66","endLine":76,"endColumn":54},{"ruleId":"64","severity":1,"message":"75","line":88,"column":25,"nodeType":"66","endLine":88,"endColumn":76},{"ruleId":"76","severity":1,"message":"77","line":90,"column":29,"nodeType":"66","endLine":90,"endColumn":71},{"ruleId":"64","severity":1,"message":"65","line":96,"column":25,"nodeType":"66","endLine":96,"endColumn":58},{"ruleId":"64","severity":1,"message":"75","line":101,"column":25,"nodeType":"66","endLine":101,"endColumn":66},{"ruleId":"78","severity":1,"message":"79","line":215,"column":10,"nodeType":"80","endLine":215,"endColumn":12,"suggestions":"81"},{"ruleId":"60","severity":1,"message":"61","line":296,"column":12,"nodeType":"62","messageId":"63","endLine":296,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":300,"column":13,"nodeType":"66","endLine":300,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":312,"column":45,"nodeType":"66","endLine":312,"endColumn":111},{"ruleId":"60","severity":1,"message":"61","line":319,"column":95,"nodeType":"62","messageId":"63","endLine":319,"endColumn":97},{"ruleId":"64","severity":1,"message":"75","line":328,"column":49,"nodeType":"66","endLine":328,"endColumn":73},{"ruleId":"82","severity":1,"message":"84","line":379,"column":21,"nodeType":"66","endLine":379,"endColumn":31},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'browserHistory' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'user_id' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'user_id'. Either include them or remove the dependency array.","ArrayExpression",["87"],"react/jsx-pascal-case","Imported JSX component I_nav must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component I_feed2 must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [token, user_id]",{"range":"90","text":"91"},[7380,7382],"[token, user_id]"]